from object_library import all_form_factors, FormFactor

from function_library import complexconjugate, re, im, csc, sec, acsc, asec, theta_function


AAA = FormFactor(name = 'AAA',
                 type = 'real',
                 value = '((Znuc**2 *aval**4 * (-(P(-1,1)-P(-1,2))**2+(P(1,1)-P(1,2))**2+(P(2,1)-P(2,2))**2+(P(3,1)-P(3,2))**2)**2/((1+aval**2*(-(P(-1,1)-P(-1,2))**2+(P(1,1)-P(1,2))**2+(P(2,1)-P(2,2))**2+(P(3,1)-P(3,2))**2))*(1+(-(P(-1,1)-P(-1,2))**2+(P(1,1)-P(1,2))**2+(P(2,1)-P(2,2))**2+(P(3,1)-P(3,2))**2)/dval))**2) + (Znuc * apval**4 *((-(P(-1,1)-P(-1,2))**2+(P(1,1)-P(1,2))**2+(P(2,1)-P(2,2))**2+(P(3,1)-P(3,2))**2)**2)*(1+inelastic1*(-(P(-1,1)-P(-1,2))**2+(P(1,1)-P(1,2))**2+(P(2,1)-P(2,2))**2+(P(3,1)-P(3,2))**2))**2/((1+apval**2*(-(P(-1,1)-P(-1,2))**2+(P(1,1)-P(1,2))**2+(P(2,1)-P(2,2))**2+(P(3,1)-P(3,2))**2))*(1+inelastic2*(-(P(-1,1)-P(-1,2))**2+(P(1,1)-P(1,2))**2+(P(2,1)-P(2,2))**2+(P(3,1)-P(3,2))**2))**4)**2))'
                 )
